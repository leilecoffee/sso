<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="cn.mcsj.sso.dao.ProductTypeDao">  
     
    <resultMap id="productTypeResultMap" type="ProductType">
		<result property="productTypeId" column="product_type_id" />
		<result property="name" column="name" />
		<result property="createTime" column="create_time" />
	</resultMap>
	
	<sql id="productTypeColumns"> 
			product_type_id,
			name,
			create_time
	</sql>
	
	<sql id="query_ProductType_where">
		<where>
			1 = 1
			<if test="productTypeId != null and productTypeId !=''">and product_type_id = #{productTypeId}</if>
			<if test="name != null and name !=''">and name = #{name}</if>
			<if test="createTime != null and createTime !=''">and create_time = #{createTime}</if>
		</where>
	</sql>
	
	<select id="getOne" parameterType="long" resultMap="productTypeResultMap">
		select
		<include refid="productTypeColumns" />
		from t_product_type
		where product_type_id = #{productTypeId}
	</select>
	
	<select id="list" parameterType="java.util.Map" resultMap="productTypeResultMap">
		select
		<include refid="productTypeColumns" />
		from t_product_type
		<include refid="query_ProductType_where" />
		<if test="_start != null and _pageSize != null">limit #{_start},#{_pageSize}</if>
	</select>
	
    <select id="total" parameterType="java.util.Map" resultType="int">
		select count(1) from t_product_type
		<include refid="query_ProductType_where" />
	</select>
    
    <insert id="insert" parameterType="ProductType" useGeneratedKeys="true" keyProperty="productTypeId">  
        insert into t_product_type(
        <include refid="productTypeColumns" />
        )  
		values(
        #{productTypeId},
        #{name},
        #{createTime}
		)
    </insert>  
      
    <update id="update" parameterType="ProductType">
		update t_product_type
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
		</set>
		where product_type_id = #{productTypeId}
	</update>

	<delete id="delete" parameterType="long">
		delete from t_product_type where
		product_type_id = #{productTypeId}
	</delete>
      
</mapper>  
